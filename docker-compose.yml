services:
  nginx:
    image: nginx:1.26.1
    ports:
      - "8080:80"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./src:/var/www/
    depends_on:
      - php

  php:
    build: ./docker/php
    # デフォルトでコンテナ内に一般ユーザーで入る。ファイルやフォルダの作成等基本操作は一般ユーザで。
    # 一部artisanコマンドがエラーで実行できないため、
    # docker-compose exec -u root php bashでルートユーザでコンテナ内に入れば実行できる。
    user: "1000:1000"
    volumes:
      - ./src:/var/www/
    ports:
      - "8000:8000"  # 追加: コンテナのポート8000をホストのポート8000にマッピング
      - "6001:6001"  # websocketのポート
    expose:
      - "9000"  # PHP-FPMがリッスンするポート

  mysql:
    image: mysql:8.0.32
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel_db
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: laravel_pass
    command: mysqld --default-authentication-plugin=mysql_native_password
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/mysql/init:/docker-entrypoint-initdb.d

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=mysql
      - PMA_USER=laravel_user
      - PMA_PASSWORD=laravel_pass
    depends_on:
      - mysql
    ports:
      - 8081:80


  app:
    build:
      context: .
      dockerfile: ./docker/next/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./app:/var/www/html/app
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: bash -c "npm install && npm run dev"
    depends_on:
      - php